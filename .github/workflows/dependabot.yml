name: Dependency Updates

on:
  schedule:
    - cron: '0 6 * * 1'  # Weekly on Monday at 6 AM
  workflow_dispatch:

jobs:
  update-base-image:
    name: Check for Ubuntu Base Image Updates
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check for Ubuntu updates
        id: ubuntu-check
        run: |
          CURRENT_VERSION=$(grep "FROM ubuntu:" Dockerfile | cut -d':' -f2)
          echo "Current Ubuntu version: $CURRENT_VERSION"
          
          # Get latest Ubuntu LTS version
          LATEST_VERSION=$(curl -s "https://registry.hub.docker.com/v2/repositories/library/ubuntu/tags/?page_size=100" | \
            jq -r '.results[].name' | grep -E '^[0-9]+\.[0-9]+$' | sort -V | tail -1)
          echo "Latest Ubuntu LTS version: $LATEST_VERSION"
          
          if [ "$CURRENT_VERSION" != "$LATEST_VERSION" ]; then
            echo "update_needed=true" >> $GITHUB_OUTPUT
            echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            echo "latest_version=$LATEST_VERSION" >> $GITHUB_OUTPUT
          else
            echo "update_needed=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request for Ubuntu Update
        if: steps.ubuntu-check.outputs.update_needed == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update Ubuntu base image from ${{ steps.ubuntu-check.outputs.current_version }} to ${{ steps.ubuntu-check.outputs.latest_version }}"
          title: "Update Ubuntu base image to ${{ steps.ubuntu-check.outputs.latest_version }}"
          body: |
            ## Ubuntu Base Image Update
            
            This PR updates the Ubuntu base image in the Dockerfile:
            - **From**: ubuntu:${{ steps.ubuntu-check.outputs.current_version }}
            - **To**: ubuntu:${{ steps.ubuntu-check.outputs.latest_version }}
            
            ### Changes
            - Updated Dockerfile to use the latest Ubuntu LTS version
            
            ### Testing
            - [ ] Docker image builds successfully
            - [ ] All authentication methods work correctly
            - [ ] No security vulnerabilities introduced
            
            This update was automatically generated by the dependency update workflow.
          branch: update/ubuntu-${{ steps.ubuntu-check.outputs.latest_version }}
          delete-branch: true

  update-caddy:
    name: Check for Caddy Updates
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check for Caddy updates
        id: caddy-check
        run: |
          CURRENT_VERSION=$(grep "caddy_.*_linux_amd64.tar.gz" Dockerfile | sed -n 's/.*caddy_\(.*\)_linux_amd64.tar.gz.*/\1/p')
          echo "Current Caddy version: $CURRENT_VERSION"
          
          # Get latest Caddy version from GitHub releases
          LATEST_VERSION=$(curl -s "https://api.github.com/repos/caddyserver/caddy/releases/latest" | jq -r '.tag_name' | sed 's/^v//')
          echo "Latest Caddy version: $LATEST_VERSION"
          
          if [ "$CURRENT_VERSION" != "$LATEST_VERSION" ]; then
            echo "update_needed=true" >> $GITHUB_OUTPUT
            echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            echo "latest_version=$LATEST_VERSION" >> $GITHUB_OUTPUT
          else
            echo "update_needed=false" >> $GITHUB_OUTPUT
          fi

      - name: Update Caddy version in Dockerfile
        if: steps.caddy-check.outputs.update_needed == 'true'
        run: |
          sed -i "s/caddy_${CURRENT_VERSION}_linux_amd64.tar.gz/caddy_${{ steps.caddy-check.outputs.latest_version }}_linux_amd64.tar.gz/g" Dockerfile
          sed -i "s/v${CURRENT_VERSION}/v${{ steps.caddy-check.outputs.latest_version }}/g" Dockerfile

      - name: Create Pull Request for Caddy Update
        if: steps.caddy-check.outputs.update_needed == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update Caddy from v${{ steps.caddy-check.outputs.current_version }} to v${{ steps.caddy-check.outputs.latest_version }}"
          title: "Update Caddy to v${{ steps.caddy-check.outputs.latest_version }}"
          body: |
            ## Caddy Update
            
            This PR updates Caddy in the Dockerfile:
            - **From**: v${{ steps.caddy-check.outputs.current_version }}
            - **To**: v${{ steps.caddy-check.outputs.latest_version }}
            
            ### Changes
            - Updated Dockerfile to download and use the latest Caddy version
            
            ### Testing
            - [ ] Docker image builds successfully
            - [ ] Caddy starts correctly with the Caddyfile configuration
            - [ ] All authentication methods work correctly
            - [ ] No breaking changes in Caddy configuration
            
            Please review the [Caddy release notes](https://github.com/caddyserver/caddy/releases/tag/v${{ steps.caddy-check.outputs.latest_version }}) for any breaking changes.
            
            This update was automatically generated by the dependency update workflow.
          branch: update/caddy-v${{ steps.caddy-check.outputs.latest_version }}
          delete-branch: true